version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgres://greenlight:password@db:5432/greenlight?sslmode=disable

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: greenlight
      POSTGRES_PASSWORD: password
      POSTGRES_DB: greenlight
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U greenlight -d greenlight"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://greenlight:password@db:5432/greenlight?sslmode=disable", "up"]
    restart: "no"

  # Monitoring Stack
  graphite:
    image: graphiteapp/graphite-statsd:latest
    container_name: lightsaber-graphite
    ports:
      - "8080:80"      # Graphite web interface
      - "2003:2003"    # Carbon receiver - plaintext
      - "2004:2004"    # Carbon receiver - pickle
      - "8125:8125/udp" # StatsD
    volumes:
      - graphite_data:/opt/graphite/storage
    environment:
      - GRAPHITE_TIME_ZONE=UTC
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: lightsaber-grafana
    ports:
      - "3000:3000"    # Grafana web interface
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - graphite
    restart: unless-stopped

volumes:
  db_data:
  graphite_data:
  grafana_data: